From 5b9c209bde2211ff9a0b6b41770ae62525f45353 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jozef=20=C4=8C=C3=AD=C5=BE?= <jozef.ciz.ml@gmail.com>
Date: Sun, 17 Apr 2022 20:51:58 +0200
Subject: [PATCH] Add support for Alt key in combination, simplify conversion
 to string

Key combinations can now include Alt as modifier.
Function for converting key combinations to string identifier was
refactored to be simpler, better working and in general better.
---
 include/zep/imgui/editor_imgui.h |  4 +++
 src/mode.cpp                     | 52 ++++++++------------------------
 2 files changed, 17 insertions(+), 39 deletions(-)

diff --git a/include/zep/imgui/editor_imgui.h b/include/zep/imgui/editor_imgui.h
index 0e538157..913f8a78 100644
--- a/include/zep/imgui/editor_imgui.h
+++ b/include/zep/imgui/editor_imgui.h
@@ -127,6 +127,10 @@ public:
         {
             mod |= ModifierKey::Ctrl;
         }
+        if (io.KeyAlt)
+        {
+            mod |= ModifierKey::Alt;
+        }
         if (io.KeyShift)
         {
             mod |= ModifierKey::Shift;
diff --git a/src/mode.cpp b/src/mode.cpp
index c862cfe1..6835eb78 100644
--- a/src/mode.cpp
+++ b/src/mode.cpp
@@ -281,31 +281,17 @@ void ZepMode::SwitchMode(EditorMode currentMode)
 
 std::string ZepMode::ConvertInputToMapString(uint32_t key, uint32_t modifierKeys)
 {
-    std::ostringstream str;
+    bool brackets = false;
+    std::string str;
     bool closeBracket = false;
     if (modifierKeys & ModifierKey::Ctrl)
-    {
-        str << "<C-";
-        if (modifierKeys & ModifierKey::Shift)
-        {
-            // // Add the S- modifier for shift enabled special keys
-            // // We want to avoid adding S- to capitalized (and already shifted)
-            // // keys
-            // if (key < ' ')
-            // {
-                str << "S-";
-            // }
-        }
-        closeBracket = true;
-    }
-    else if (modifierKeys & ModifierKey::Shift)
-    {
-        if (key < ' ')
-        {
-            str << "<S-";
-            closeBracket = true;
-        }
-    }
+        str += "C-";
+    if (modifierKeys & ModifierKey::Alt)
+        str += "A-";
+    if (modifierKeys & ModifierKey::Shift)
+        if (modifierKeys != ModifierKey::Shift || key < ' ')
+            str += "S-";
+    brackets = !str.empty();
 
     std::string mapped;
 
@@ -341,27 +327,15 @@ std::string ZepMode::ConvertInputToMapString(uint32_t key, uint32_t modifierKeys
 
     if (!mapped.empty())
     {
-        if (!closeBracket)
-        {
-            str << "<" << mapped;
-            closeBracket = true;
-        }
-        else
-        {
-            str << mapped;
-        }
+        brackets = true;
+        str += mapped;
     }
     else
     {
-        str << std::string((const char*)&key);
-    }
-
-    if (closeBracket)
-    {
-        str << ">";
+        str += std::string((const char*)&key);
     }
 
-    return str.str();
+    return brackets ? "<" + str + ">" : str;
 }
 
 // Handle a key press, convert it to an input command and context, and return it.
-- 
2.39.1

