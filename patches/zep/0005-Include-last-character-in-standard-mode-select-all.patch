From f43bac7fcd6d0b5c918d9c9d7b0024d084f263b6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jozef=20=C4=8C=C3=AD=C5=BE?= <jozef.ciz.ml@gmail.com>
Date: Tue, 12 Apr 2022 22:45:17 +0200
Subject: [PATCH] Include last character in standard mode select all

Standard mode select all behaved like vim mode select all. Because of
different cursor positioning between these modes, the last character was
not selected.
---
 include/zep/mode.h | 2 +-
 src/mode.cpp       | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/include/zep/mode.h b/include/zep/mode.h
index 21a5cbc6..87f5cb5d 100644
--- a/include/zep/mode.h
+++ b/include/zep/mode.h
@@ -182,7 +182,7 @@ public:
     // Keys handled by modes
     virtual void AddCommandText(std::string strText);
 
-    virtual GlyphRange GetInclusiveVisualRange() const;
+    virtual GlyphRange GetInclusiveVisualRange(bool mayExcludeLast = true) const;
 
     virtual std::vector<Airline> GetAirlines(ZepWindow&) const { return std::vector<Airline>{}; }
 
diff --git a/src/mode.cpp b/src/mode.cpp
index a9fe900d..b406c96f 100644
--- a/src/mode.cpp
+++ b/src/mode.cpp
@@ -658,7 +658,7 @@ void ZepMode::Undo()
     };
 }
 
-GlyphRange ZepMode::GetInclusiveVisualRange() const
+GlyphRange ZepMode::GetInclusiveVisualRange(bool mayExcludeLast) const
 {
     // Clamp and orient the correct way around
     auto startOffset = m_visualBegin.Clamped();
@@ -669,7 +669,7 @@ GlyphRange ZepMode::GetInclusiveVisualRange() const
         std::swap(startOffset, endOffset);
     }
 
-    if (DefaultMode() == EditorMode::Insert)
+    if (mayExcludeLast && DefaultMode() == EditorMode::Insert)
     {
         // In standard/insert mode, selections exclude the last character
         endOffset.Move(-1);
@@ -997,7 +997,7 @@ bool ZepMode::GetCommand(CommandContext& context)
         context.commandResult.modeSwitch = EditorMode::Visual;
         m_visualBegin = context.buffer.Begin();
         m_visualEnd = context.buffer.End();
-        auto range = GetInclusiveVisualRange();
+        auto range = GetInclusiveVisualRange(false);
         GetCurrentWindow()->GetBuffer().SetSelection(range);
         GetCurrentWindow()->SetBufferCursor(range.second);
         return true;
-- 
2.39.1

