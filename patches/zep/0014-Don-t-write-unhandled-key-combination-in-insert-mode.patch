From e26f68a69e9e0914c78f8efe2e338e74853c1d1f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jozef=20=C4=8C=C3=AD=C5=BE?= <jozef.ciz.ml@gmail.com>
Date: Thu, 14 Apr 2022 11:33:23 +0200
Subject: [PATCH] Don't write unhandled key combination in insert mode

It's very annoying, when an unbound key combination is written to the
document and several characters have to be then removed. This behaviour
is removed.
---
 src/mode.cpp | 26 ++++++++++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/src/mode.cpp b/src/mode.cpp
index 7aa790c1..efdd41fe 100644
--- a/src/mode.cpp
+++ b/src/mode.cpp
@@ -707,7 +707,29 @@ bool ZepMode::GetCommand(CommandContext& context)
 
     auto movementLineEndLocation = context.currentMode == EditorMode::Insert ? LineLocation::LineCRBegin : LineLocation::LineLastNonCR;
 
-    if (mappedCommand == id_NormalMode)
+    if (mappedCommand == 0 && m_currentMode == EditorMode::Insert)
+    {
+        if (context.keymap.commandWithoutGroups.size() == 1)
+        {
+            context.beginRange = context.bufferCursor;
+            context.tempReg.text = context.keymap.commandWithoutGroups;
+            context.pRegister = &context.tempReg;
+            context.op = CommandOperation::Insert;
+            context.commandResult.modeSwitch = EditorMode::Insert;
+            context.commandResult.flags |= CommandResultFlags::HandledCount;
+
+            // Insert grouping command if necessary
+            if (context.fullCommand == " ")
+            {
+                context.commandResult.flags = ZSetFlags(context.commandResult.flags, CommandResultFlags::BeginUndoGroup, shouldGroupInserts);
+            }
+        }
+        else
+        {
+            return false;
+        }
+    }
+    else if (mappedCommand == id_NormalMode)
     {
         // TODO: I think this should be a 'command' which would get replayed with dot;
         // instead of special casing it later, we could just insert it into the stream of commands
@@ -1865,7 +1887,7 @@ bool ZepMode::GetCommand(CommandContext& context)
             context.op = CommandOperation::Delete;
         }
     }
-    else if (m_currentMode == EditorMode::Insert)
+    else if (m_currentMode == EditorMode::Insert) // WARNING: no-"id_command" cases are handled as first branch of this if-else
     {
         // If not a single char, then we are trying to input a special, which isn't allowed
         // TOOD: Cleaner detection of this?
-- 
2.39.1

