From 3edaabb3193f9a17eba82a6b7a88359a6cf7aaff Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jozef=20=C4=8C=C3=AD=C5=BE?= <jozef.ciz.ml@gmail.com>
Date: Sat, 30 Apr 2022 17:05:03 +0200
Subject: [PATCH] Fix bugs and replace windows specific functions

---
 example/src/imgui_notify.h | 28 +++++++++++++++++++++-------
 1 file changed, 21 insertions(+), 7 deletions(-)

diff --git a/example/src/imgui_notify.h b/example/src/imgui_notify.h
index 1a48115..49642d9 100644
--- a/example/src/imgui_notify.h
+++ b/example/src/imgui_notify.h
@@ -7,6 +7,7 @@
 #pragma once
 #include <vector>
 #include <string>
+#include <chrono>
 #include "font_awesome_5.h"
 #include "fa_solid_900.h"
 
@@ -17,13 +18,14 @@
 #define NOTIFY_FADE_IN_OUT_TIME			150			// Fade in and out duration
 #define NOTIFY_DEFAULT_DISMISS			3000		// Auto dismiss after X ms (default, applied only of no data provided in constructors)
 #define NOTIFY_OPACITY					1.0f		// 0-1 Toast opacity
-#define NOTIFY_TOAST_FLAGS				ImGuiWindowFlags_AlwaysAutoResize | ImGuiWindowFlags_NoDecoration | ImGuiWindowFlags_NoInputs | ImGuiWindowFlags_NoNav | ImGuiWindowFlags_NoBringToFrontOnFocus | ImGuiWindowFlags_NoFocusOnAppearing
+#define NOTIFY_TOAST_FLAGS				ImGuiWindowFlags_AlwaysAutoResize | ImGuiWindowFlags_NoDecoration | ImGuiWindowFlags_NoInputs | ImGuiWindowFlags_NoNav | ImGuiWindowFlags_NoFocusOnAppearing
 // Comment out if you don't want any separator between title and content
 #define NOTIFY_USE_SEPARATOR
 
+#define VOID							void
 #define NOTIFY_INLINE					inline
 #define NOTIFY_NULL_OR_EMPTY(str)		(!str ||! strlen(str))
-#define NOTIFY_FORMAT(fn, format, ...)	if (format) { va_list args; va_start(args, format); fn(format, args, __VA_ARGS__); va_end(args); }
+#define NOTIFY_FORMAT(fn, format, ...)	if (format) { va_list args; va_start(args, format); fn(format, args); va_end(args); }
 
 typedef int ImGuiToastType;
 typedef int ImGuiToastPhase;
@@ -60,6 +62,10 @@ enum ImGuiToastPos_
 	ImGuiToastPos_COUNT
 };
 
+static long long GetTickCount64() {
+	return std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count();
+}
+
 class ImGuiToast
 {
 private:
@@ -113,7 +119,7 @@ public:
 
 	NOTIFY_INLINE auto get_type() -> const ImGuiToastType& { return this->type; };
 
-	NOTIFY_INLINE auto get_color() -> const ImVec4&
+	NOTIFY_INLINE auto get_color() -> ImVec4
 	{
 		switch (this->type)
 		{
@@ -151,7 +157,7 @@ public:
 
 	NOTIFY_INLINE auto get_elapsed_time() { return GetTickCount64() - this->creation_time; }
 
-	NOTIFY_INLINE auto get_phase() -> const ImGuiToastPhase&
+	NOTIFY_INLINE auto get_phase() -> ImGuiToastPhase
 	{
 		const auto elapsed = get_elapsed_time();
 
@@ -173,7 +179,7 @@ public:
 		}
 	}
 
-	NOTIFY_INLINE auto get_fade_percent() -> const float
+	NOTIFY_INLINE auto get_fade_percent() -> float
 	{
 		const auto phase = get_phase();
 		const auto elapsed = get_elapsed_time();
@@ -212,6 +218,8 @@ public:
 
 namespace ImGui
 {
+	const ImGuiPlatformMonitor*   GetViewportPlatformMonitor(ImGuiViewport* viewport);
+
 	NOTIFY_INLINE std::vector<ImGuiToast> notifications;
 
 	/// <summary>
@@ -236,7 +244,13 @@ namespace ImGui
 	/// </summary>
 	NOTIFY_INLINE VOID RenderNotifications()
 	{
-		const auto vp_size = GetMainViewport()->Size;
+		auto vp_size = GetMainViewport()->Size;
+		bool ViewportsEnable = false;
+		if (GetIO().ConfigFlags & ImGuiConfigFlags_ViewportsEnable)
+		{
+			vp_size = GetViewportPlatformMonitor(GetMainViewport())->MainSize;
+			ViewportsEnable = true;
+		}
 
 		float height = 0.f;
 
@@ -264,7 +278,7 @@ namespace ImGui
 
 			// Generate new unique name for this toast
 			char window_name[50];
-			sprintf_s(window_name, "##TOAST%d", i);
+			snprintf(window_name, sizeof(window_name), "##TOAST%d", i);
 
 			//PushStyleColor(ImGuiCol_Text, text_color);
 			SetNextWindowBgAlpha(opacity);
-- 
2.36.0

